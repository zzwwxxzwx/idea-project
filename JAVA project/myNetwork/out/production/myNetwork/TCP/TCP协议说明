3.1 TCP通信原理
    TCP通信协议是一种可靠的网络协议，它在通信的两端各建立一个 Socket对象，从而在通信的两端形成网络虚拟链路
    一旦建立了虚拟的网络链路，两端的程序就可以通过虚拟链路进行通信
    Java对基于TCP协议的的网络提供了良好的封装，使用 Socket对象来代表两端的通信端口，并通过 Socketi产生IO流来进行网络通信
    Java为客户端提供了 Socket类，为服务器端提供了 ServerSocket类

3.2 TCP发送数据
    发送数据的步骤
        ①创建客户端的Socket对象(Socket)
            Socket(String host, int port)
        ②获取输出流，写数据
            OutputStream os = s.getOutputStream();
        ③释放资源
            void close()

3.3 TCP接收数据
    接收数据的步骤
        ①创建服务器端的Socket对象(ServerSocket)
            ServerSocket(int port)
        ②监听客户端连接，返回个 Socket对象
            Socket accept()
        ③获取输入流，读数据，并把数据易示在控制台
            InputStream is = s.getInputStream();
        ④释放资源
            void close()
3.4TCP通信程序练习
    练习1
        客户端：发送数据，接收服务器反馈
        服务器：接收数据，给出反馈

    练习2
        客户端：数据来自于键盘录入，直到输入的数据是886，发送数据结束
        服务器：接收到的数据在控制台输出

    练习3
        客户端：数据来自于键盘录入，直到翰入的数据是886，发送数据结束
        服务器：接收到的数据写入文本文件

    练习4
        客户端：数据来自于文本文件
        服务器：接收到的数据写入文本文件

    练习5
        客户端：数据来白于文本文件，接收服务器反馈
        服务器：接收到的数据写入文本文件，给出反馈
        出现问题：程序一直等待
        原因：读数据的方法是阻塞式的
        解决办法：自定义结束标i记；使用 shutdownOutput()方法推荐

    练习6
        客户端：数据来自于文本文件，接收服务器反馈
        服务器：接收到的数据与入文本文件，给出反馈，代码用线程进行封装，为每一个客户端开启一个线程

