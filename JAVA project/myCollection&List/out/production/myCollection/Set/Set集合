3.1 Set集合概述和特点
    Set集合特点
        不包含重复元素的集合
        没有带索引的方法，所以不能使用普通for循环遍历
    Set集合练习
        存储字符串并遍历
    HashSet:对集合的选代顺序不作任何保证

3.2 哈希值
    哈希值：是JDK根据对的地址或者字符串或者数字算出来的int类型的数值
        Object类中有一个方法可以获取对象的哈希值
        public int hashCode():返回对象的哈希码值
    对象的哈希值特点
        同一个对象多次调用 hashCode()方法返回的哈希值是相同的
        默认情况下，不同对客的哈希值是不同的。而重写 hashCode()方法，可以实现让不同对象的哈希值相同


3.3 HashSet集合概述和特点
    HashSet集合特点
        底层数据结构是哈希表
        对集合的迭代顺序不作任何保证，也就是说不保证存储和取出的元素顺序一致
        没有带索引的方法，以不能使用普通fo循环遍历
        由于是Set集合，所以是不包含重复元素的集合
    HashSet集合练习
        存储字符串并遍历

3.4 HashSet集合保证元素唯一性源码分析
    HashSet集合添加一个元索的过程：
        见Set.SetDemo3_HashSet中源码分析
    HashSet集合存储元素：
    要保证元素唯一性，需要重写 hashCode0和 equals()

3.5常见数据结构之哈希表
    哈希表
        JDK8之前，底层采用数组+链表实现，可以说是一个元素为链表的数组
        JDK8以后，在长度比较长的时候，底层实现了优化
    过程：
        将元素的哈希值除以16取余，(比如结果为2)，然后与余数为2的下的元素的哈希值进行比较如果不重复，再进行equals比较还是不重复，则添加

案例： HashSet集合存储学生对象并遍历
    需求：创建一个存储学生对象的集合，存储多个学生对象，使用程序实现在控制台遍历该集合
        要求：学生对象的成员变量值相同，我们就认为是同一个对象
    思路：
        ①定义学生类
        ②创建 HashSet集合对象
        ③创建学生对象
        ④把学生添加到集合
        ⑤遍历集合（增强for)
        ⑥在学生类中重写两个方法
            hashCode()和equals()
            自动生成即可

3.6 LinkedHashSet集合概述和特点
    LinkedHashSet集合特点
        哈希表和链表实现的e接口，具有可预测的迭代次序
        由链表保证元素有序，也就是说元素的存储和取出顺序是一致的
        由哈希表保证元素唯一，也就是说没有重反的元素
    LinkedHashSet集合练习
        存储字符串并遍历

3.7 TreeSet集合概述和特点
    TreeSet集合特点
        元素有序，这里的顺序不是指存储和取出的顺序，而是按照一定的规则进行排序，具体排序方式取决于构造方法
            TreeSet(:根据其元素的自然排序进行排序
            TreeSet( Comparator comparator):根据指定的比较器进行排序
        没有带索引的方法，所以不能使用普通for循环遍历,可以用迭代器和增强for
        由于是Set集合，所以不包含重复元素的集合
    TreeSet集合练习
        存储整数并遍历

3.8 自然排序 Comparable的使用
        存储学生对象并遍历，创建 TreeSet集合使用无参构造方法
        要求：按照年龄从小到大排序，年龄相同时，按照姓名的字母顺序排序
    结论
        用 TreeSet集合存储自定义对象，无参构造方法使用的是自然排序对元素进行排序的
        自然排序，就是让元素所属的类实现 Comparable接口，重写 compareTo(To方法
        重写方法时，一定要注意排序规则必须按照要求的主要条件和次要条件来写

3.9 比较器排序Comparator的使用
        存储学生对象并遍历，创建 TreeSet集合使用带参构造方法
        要求：按照年龄从小到大排序，年龄相同时，按姓名的字母顺序排序
    结论
        用TreeSet集合存储自定义对象，带参构造方法使用的是比较器排序对元素进行排序的
        比较器排序，就是让集合构造方法接收 Comparator的实现类对象，重写 compare(T o1,T o2)方法
        重写方法时，一定要注意排序规则必须按照要求的主要条件和次要条件来写

案例：成绩排序
    需求：用 TreeSet集合存储多个学生信息姓名，语文成绩，数学成绩，并遍历该集合
        要求：按照总分从高到低出现
    思路：
        ①定义学生类
        ②创建 TreeSet集合对象。通过比较器排序进行排序
        ③创建学生对象
        ④把学生对象添加到集合
        ⑤遍历集合

案例：不重复的随机数
    需求：编写一个程序，获取10个1-20之间的随机数，要求随机数不能重复，并在控制台输出
    思路：
        ①创建Set集合对象
        ②创建随机数对象
        ③判断集合的长度是不是小于10
            是：产生一个随机数，添加到集合
            回到③继续
        ④遍历集合
