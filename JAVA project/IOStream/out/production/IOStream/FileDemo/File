1.1 File类概述和构造方法
    File:它是文件和目录路径名的抽象表示
        文件和目录是可以通过File封装成对象的
        对于File而言，其封装的并不是一个真正存在的文件，仅仅是一个路径名而已。它可以是存在的，也可以是不存在的。将来是要通过具体的操作把这个路径的内容转换为具体存在的
        方法名                                         说明
    File(String pathname)                   通过将给定的路径名字符串转换为抽象路径名来创建新的File实例
    File(String parent, String child)       从父路径名字符串和子路径名字符串创建新的File实例
    File(File parent, String child)         从父抽象路径名和子路径名字符串创建新的File实例

1.2 File类创建功能
    方法名                                                 说明
    public boolean createNewFile()       当具有该名称的文件不存在时，创建一个由该抽象路径名命名的新空文件
    public boolean mkdir                创建由此抽象路径名命名的目录
    public boolean mkdirs()              创建由此抽象路径名命名的目录，包括任何必需但不存在的父目录

1.3 File类删除功能
        方法名                                      说明
    public boolean delete()              删除由此抽象路径名表示的文件或目录
    绝对路径和相对路径的区别
        绝对路径：完整的路径名，不需要任何其他信息就可以定位它所表示的文件。例如：E: \\itcast\\Java.txt
        相对路径：必须使用取自其他路径名的信息进行解释。例如： myFile\\Java.txt
    删除目录时的注意事项：
        如果一个目录中有内容（目录，文件），不能直接删除。应该先册删除目录中的内容，最后才能删除目录

1.4 File类判断和获取功能
        方法名                                     说明
    public boolean isDirectory()         测试此抽象路径名表示的File是否为目录
    public boolean isFile()              测试此抽象路径名表示的File是否为文件
    public boolean exists()              测试此抽象路径名表示的File足否存在
    public String getAbsolutePath()      返回此抽象路径名的绝对路径名字符串
    public String getPath()              将此抽象路径名转换为路径名字符串
    public String getName()              返回由此抽象路径名表示的文件或目录的名称
    public String[] list()               返回此抽象路径名表示的目录中的文件和目录的名称字符串数组
    public File[] listFiles()            返回此抽象路径名表示的目录中的文件和目录的File对象数组

1.5 递归
    递归概述：
        以编程的角度来看，递归指的是方法定义中调用方法本身的现象
    递归解决问题的思路：
        把一个复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解
        递归策略只需少量的程序就可描述出解题过程所需要的多次重复计算
    递归解决问题要找到两个内容：
        递归出口：否则会出现内存溢出
        递归规则：与原问题相似的规模较小的问题

案例：遍历目录
    需求：给定一个路径(C:\desktop\idea project\JAVA project),请通过递归完成追历该目录下的所有内容，并把所有文件的绝对路径输出在控制台
    思路：
        ①根据给定的路径创建一个File对象
        ②定义一个方法，用于获取给定目录下的所有内容，参数为第1步创健的File对象
        ③获取给定的File目录下所有的文件或者目录的File数组
        ④遍历该File数组，得到每一个File对象
        ⑤判断该File对象是否是目录
            是：递归调用
            不是：获取绝对路径输出在控制台
        ⑥调用方法
